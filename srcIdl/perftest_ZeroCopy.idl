/**
 * TODO: Explain why we are using this file. Mention Issue with ZeroCopy 
*/

#ifdef RTI_CUSTOM_TYPE
#include "custom.idl"
#endif

const long MAX_BOUNDED_SEQ_SIZE_cp = 63000;
const long KEY_SIZE_cp = 4;

/*
 * ZERO COPY WITH FLATDATA
 */
@mutable
@language_binding(FLAT_DATA)
@transfer_mode(SHMEM_REF)
struct TestData_ZeroCopy_w_FlatData_t {
    octet key[KEY_SIZE_cp];

    long entity_id;
    unsigned long seq_num;
    long timestamp_sec;
    unsigned long timestamp_usec;
    long latency_ping;
    sequence<octet, MAX_BOUNDED_SEQ_SIZE_cp> bin_data;
  #ifdef RTI_CUSTOM_TYPE
    RTI_CUSTOM_TYPE custom_type;
    // custom_type_size is the serialize size of the field custom_type
    // in the the sample that we send on the wire
    long custom_type_size;
  #endif
};

@mutable
@language_binding(FLAT_DATA)
@transfer_mode(SHMEM_REF)
struct TestDataKeyed_ZeroCopy_w_FlatData_t {
    @key
    octet key[KEY_SIZE_cp];

    long entity_id;
    unsigned long seq_num;
    long timestamp_sec;
    unsigned long timestamp_usec;
    long latency_ping;
    sequence<octet, MAX_BOUNDED_SEQ_SIZE_cp> bin_data;
  #ifdef RTI_CUSTOM_TYPE
    @key
    RTI_CUSTOM_TYPE custom_type;
    long custom_type_size;
  #endif
};

@mutable
@language_binding(FLAT_DATA)
@transfer_mode(SHMEM_REF)
struct TestDataLarge_ZeroCopy_w_FlatData_t {
    octet key[KEY_SIZE_cp];

    long entity_id;
    unsigned long seq_num;
    long timestamp_sec;
    unsigned long timestamp_usec;
    long latency_ping;
    sequence<octet, RTI_FLATDATA_MAX_SIZE> bin_data;
  #ifdef RTI_CUSTOM_TYPE
    RTI_CUSTOM_TYPE custom_type;
    long custom_type_size;
  #endif
};

@mutable
@language_binding(FLAT_DATA)
@transfer_mode(SHMEM_REF)
struct TestDataKeyedLarge_ZeroCopy_w_FlatData_t {
    @key
    octet key[KEY_SIZE_cp];

    long entity_id;
    unsigned long seq_num;
    long timestamp_sec;
    unsigned long timestamp_usec;
    long latency_ping;
    sequence<octet, RTI_FLATDATA_MAX_SIZE> bin_data;
  #ifdef RTI_CUSTOM_TYPE
    @key
    RTI_CUSTOM_TYPE custom_type;
    long custom_type_size;
  #endif
};